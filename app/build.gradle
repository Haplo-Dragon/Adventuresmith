apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'
apply plugin: 'com.neenbedankt.android-apt' // must be after groovy plugin
apply plugin: "org.sonarqube"
apply plugin: 'io.fabric'


ext {
    groovyVersion = '2.4.7'
    androidSupportVersion = '24.2.1'
    daggerVersion = '1.2.2'
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "org.steavesea.rpgpad"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warning 'InvalidPackage' // lint sees references in the grooid jar to unavailable java classes
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/org.codehaus.groovy.runtime.ExtensionModule'
        exclude 'META-INF/services/org.codehaus.groovy.transform.ASTTransformation'
    }
}

androidGroovy {
    // setup custom groovy compile options
    options {
        configure(groovyOptions) {
            javaAnnotationProcessing = true
            configurationScript = file("$projectDir/config/groovy-compile-options.groovy")
        }
    }
    // skip javac MUST be false for not set for apt to work correctly
}

sonarqube {
    properties {
        property "sonar.projectName", "RPG-Pad :: Simple Project :: Generate nonsense at push of a button!"
        property "sonar.projectKey", "org.stevesea:rpgpad"

        property "sonar.sourceEncoding","UTF-8"
        property "sonar.sources","."
        property "sonar.exclusions","build/**,**/*.png"

        property "sonar.import_unknown_files", true

        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
    }
}

dependencies {
    compile "org.codehaus.groovy:groovy:$groovyVersion:grooid"

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    compile 'com.arasthel:swissknife:1.4.0'

    compile "com.android.support:support-annotations:$androidSupportVersion"
    compile "com.android.support:support-v4:$androidSupportVersion"
    compile "com.android.support:support-compat:$androidSupportVersion"
    compile "com.android.support:support-core-utils:$androidSupportVersion"
    compile "com.android.support:support-core-ui:$androidSupportVersion"
    compile "com.android.support:appcompat-v7:$androidSupportVersion"
    compile "com.android.support:design:$androidSupportVersion"
    compile "com.android.support:recyclerview-v7:$androidSupportVersion"

    compile "com.squareup.dagger:dagger:$daggerVersion"
    apt "com.squareup.dagger:dagger-compiler:$daggerVersion"

    compile('com.crashlytics.sdk.android:crashlytics:2.6.4@aar') {
        transitive = true;
    }

    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-timber:1.3.1@aar'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}

// APT doesn't know to make these directories for tests. Force them to
// be written.
afterEvaluate {
    def createAptTestDirs = tasks.create('createAptTestDirs')
    createAptTestDirs.doFirst {
        file("$buildDir/generated/source/apt/test/debug").mkdirs()
        file("$buildDir/generated/source/apt/test/release").mkdirs()
    }
    tasks.getByName('mockableAndroidJar').finalizedBy(createAptTestDirs)
}


tasks.withType(Test) {
    testLogging {
        exceptionFormat 'full'
    }
}
