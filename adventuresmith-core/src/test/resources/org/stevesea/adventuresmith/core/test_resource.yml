templates:
- |
  table1: {{table1}}
  table2: {{table2}}

  table3: {{table3}}   # recursive reference, tab3's string is a key to point at tab2

  sibling_table: {{sibling_table}}      # direct dependency
  sibling_table2: {{sibling_table2}}    # transitive dependency (brought in by sibling_table)

  nested_table: {{subtable1.subtableA}} # selecting nested table works just like selecting a any RangeMap

  # to randomly select a particular nested table, you might do something like the following
  # the template is processed repeatedly until all {{'s are gone.
  # (only up to five times). first pass through the processor, the table below will be
  # selected, second pass it'll select items from the nested tables.
  random pick of nested: {{nested_table_picker}}

  # we can also just have variables in 'definitions' map
  {{#a_list}}{{^-first}}, {{/-first}}{{this}}{{/a_list}}

  {{#a_list_of_objs}}{{val}}{{/a_list_of_objs}}

  dice:
  3d6: {{> dice: 3d6}}
  20d20+1: {{> dice: 20d20+1}}
  6d4: {{> dice: 6d4}}

definitions:
  a_list:
  - asdfasdf
  - asdfasf2
  - asfdasdf3
  a_list_of_objs:
  - id: objid1
    val: objval1
  - id: objid2
    val: objval2
  - id: objid3
    val: objval3
  a_map:
    mapkey1: mapval1
    mapkey2: mapval2
    mapkey3: mapval3

include_tables:
- test_sibling

tables:
  table1:
  - t1_valA
  - t1_valB
  - t1_valC

  table2:
  - t2_valA
  - t2_valB
  - t2_valC

  nested_table_picker:
  - "subtableA - {{subtable1.subtableA}}"
  - "subtableB - {{subtable1.subtableB}}"
  - "subtableC - {{subtable2.subtableC}}"
  - "subtableD - {{subtable2.subtableD}}"

  table3:
  - "{{table2}}"

nested_tables:
  subtable1:
    subtableA:
    - subtA_val1
    - subtA_val2
    - subtA_val3
    subtableB:
    - subtB_val1
    - subtB_val2
    - subtB_val3
  subtable2:
    subtableC:
    - subtC_val1
    - subtC_val2
    - subtC_val3
    subtableD:
    - subtD_val1
    - subtD_val2
    - subtD_val3

